name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
env:
  CLANG_VERSION: 18
jobs:
  build:
    name: Build
    runs-on: gcc:15
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install CMake (Debian repo)
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends cmake ninja-build
          cmake --version
      - name: Generate compilation database and build
        run: |
          env
          mkdir build
          cmake -S . -B build -G Ninja \
          -DCMAKE_CXX_COMPILER=gcc-15 \
          -DCMAKE_CXX_COMPILER_CLANG_SCAN_DEPS=gcc-scan-deps-15 \
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug \
          cmake --build build -j \
          ctest --test-dir build --output-on-failure \
          cmake --build build --target coverage sonar_scan
#      - name: SonarQube Scan
#        uses: SonarSource/sonarqube-scan-action@v4
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Put the name of your token here
#        with:
#          # Set the property "sonar.cfamily.compile-commands" to the compilation database file
#          args: >
#            --define sonar.cfamily.compile-commands=build/compile_commands.json